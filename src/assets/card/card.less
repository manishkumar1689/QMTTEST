/////////////////////////////////////
// Card
/////////////////////////////////////
@import (reference) "../variables/global";
@import (reference) "../font/icon-names";

.card {
  max-width: 100%;
  padding: @space-large;
  margin: @space-base;
  background-color: @card-color-background;
  border: 1px solid transparent;

  &.selected {
    border: 1px solid @blue;
  }

  &:hover {
    cursor: pointer;
    background-color: @card-color-background-hover;
  }

  &.draggable {
    &:hover {
      box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);
    }

    .left .title::before {
      content: @icon-drag-handle;
      font-family: "Ericsson Icons";
      font-size: 16px;
      vertical-align: baseline;
      margin-right: @space-base;
    }
  }

  .header {
    display: flex;
    align-items: center;
    padding-bottom: 0;

    .left {
      flex: 1;

      .title {
        font-size: 16px;
        font-family: "Ericsson Hilda";
        font-weight: @weight-medium;
      }

      .subtitle {
        font-size: 12px;
        opacity: .6;
        display: block;
        margin-top: @space-small;
        margin-left: 0;
      }
    }

    .right {
      .action {
        font-size: 20px;
        font-weight: @weight-medium;

        i {
          font-size: 16px;
          font-weight: @weight-regular;
          vertical-align: baseline;
        }
      }
    }
  }

  .content {
    padding-top: 16px;
  }
}

/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  box-shadow: 0 4px 10px 0 rgba(0, 0, 0, .2) !important;
  cursor: grabbing !important;
}

/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}

/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: .2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}
